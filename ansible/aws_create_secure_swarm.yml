---

- hosts: localhost
  connection: local
  roles:
  - { role: aws/create_secure_swarm_base_etcd, when: swarm_discovery == 'etcd' }
  - { role: aws/create_secure_swarm_base_consul, when: swarm_discovery == 'consul' }
  - aws/set_swarm_facts
  - common/swarm/certs/create_certs
  - common/swarm/certs/gather_local_certs

- hosts: launched
  remote_user: core
  gather_facts: False
  roles:
  - defunctzombie.coreos-bootstrap

- hosts: launched
  remote_user: core
  sudo: True
  roles:
  - common/swarm/certs/place_certs
  - common/start_consul
  - coreos/secure_docker_engine
  
- hosts: swarm_masters
  remote_user: core
  sudo: True
  roles:
  - common/swarm/certs/place_manager_certs
  - common/swarm/configure_swarm_master

- hosts: swarm_nodes
  remote_user: core
  sudo: True
  roles:
  - common/swarm/configure_swarm_node  

- hosts: localhost
  connection: local
  roles:
  - common/swarm/evt
  
- hosts: localhost
  connection: local
  tasks:
  - name: Print Swarm masters
    debug: msg="{{ item }}"
    with_items: groups.swarm_masters  
  - name: Print App Nodes
    debug: msg="{{ item }}"
    with_items: groups.app_nodes
  - name: Set Local Client to Verify TLS
    debug: msg='export DOCKER_TLS_VERIFY=1'   
  - name: Set Local Client Cert Path
    debug: msg='export DOCKER_CERT_PATH=$(pwd)/swarm'    
  - name: Set Docker Host
    debug: msg='export DOCKER_HOST=tcp://{{ master_lb }}:4000'
  - name: Get Cluster Info (must have set DOCKER_HOST, DOCKER_TLS_VERIFY, DOCKER_CERT_PATH)
    debug: msg='docker info'